{"version":3,"file":"static/js/245.50d15d89.chunk.js","mappings":"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","sources":["webpack://goit-react-phonebook_final/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-phonebook_final/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-phonebook_final/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-phonebook_final/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-phonebook_final/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-phonebook_final/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"iconSpan\":\"Form_iconSpan__49o47\",\"formLabel\":\"Form_formLabel__alHO0\",\"input\":\"Form_input__FTtTw\",\"imageLabel\":\"Form_imageLabel__58gHn\",\"icon\":\"Form_icon__zEIiB\",\"imageInput\":\"Form_imageInput__sG6S2\",\"button\":\"Form_button__8NOIT\",\"photo\":\"Form_photo__4Kxdb\"};","import { useState } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport { MdOutlineAddAPhoto } from 'react-icons/md';\nimport css from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContactDBThunk, putContactDBThunk } from 'redux/contactsDB/thunks';\nimport { contactsSelector, filterSelector } from 'redux/stateSelectors';\n\nconst Form = ({ toggleModal }) => {\n  const { contacts } = useSelector(contactsSelector);\n  const {\n    selectedUser: {\n      id,\n      name: nameIni,\n      number: numberIni,\n      url: urlIni,\n      action: actionModal,\n    },\n  } = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(nameIni);\n  const [number, setNumber] = useState(numberIni);\n  const [url, setUrl] = useState(urlIni);\n\n  const isIncludingName = (name, array) => {\n    const lowName = name.toLowerCase();\n    return array.find(({ name }) => name.toLowerCase() === lowName);\n  };\n\n  const addUser = newItem => {\n    const decisionForAdd = isIncludingName(newItem.name, contacts);\n    if (decisionForAdd) {\n      alert(`${decisionForAdd.name} is already in contacts !`);\n      return;\n    }\n    dispatch(postContactDBThunk(newItem));\n  };\n\n  const editUser = newItem => {\n    dispatch(putContactDBThunk(newItem));\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    actionModal === 'Add' && addUser({ name, number, url });\n    actionModal === 'Edit' && editUser({ id, name, number, url });\n\n    toggleModal();\n  };\n\n  const handlerChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handlerChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handlerChangeFile = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setUrl(reader.result);\n    };\n  };\n\n  return (\n    <form onSubmit={handlerSubmit} className={css.form} autoComplete=\"off\">\n      <span className={css.iconSpan}>\n        {url ? (\n          <img className={css.photo} src={url} alt=\"User portrait\"></img>\n        ) : (\n          <FiUser />\n        )}\n      </span>\n      <label className={css.formLabel}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handlerChangeName}\n          className={css.input}\n          placeholder=\"Name\"\n        />\n      </label>\n      <label className={css.formLabel}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handlerChangeNumber}\n          className={css.input}\n          placeholder=\"Number\"\n        />\n      </label>\n      <label className={css.imageLabel}>\n        <MdOutlineAddAPhoto className={css.icon} />\n        <input\n          type=\"file\"\n          name=\"image\"\n          accept=\"image/*,.png,.jpg,.gif,.web\"\n          className={css.imageInput}\n          onChange={handlerChangeFile}\n        />\n      </label>\n\n      <button className={css.button} type=\"submit\">\n        {actionModal}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListUl\":\"ContactList_contactListUl__H+yFe\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ListItem_listItem__POSh4\",\"imageThumb\":\"ListItem_imageThumb__Eec-4\",\"favoriteBorderIcon\":\"ListItem_favoriteBorderIcon__ME4Dm\",\"favoriteIcon\":\"ListItem_favoriteIcon__Qnsa3\",\"dataBox\":\"ListItem_dataBox__SmNq0\",\"pName\":\"ListItem_pName__pIS+q\",\"pNumber\":\"ListItem_pNumber__5gwYl\",\"button\":\"ListItem_button__6KOfW\",\"starIcon\":\"ListItem_starIcon__Lfote\",\"callIcon\":\"ListItem_callIcon__0sjQf\",\"removeIcon\":\"ListItem_removeIcon__9qhcz\",\"photoDemo\":\"ListItem_photoDemo__+09+G\"};","import PropTypes from 'prop-types';\nimport css from './ListItem.module.css';\nimport { CiSquareRemove } from 'react-icons/ci';\nimport { FaPhone } from 'react-icons/fa';\nimport { MdFavorite, MdFavoriteBorder } from 'react-icons/md';\nimport { useState } from 'react';\nimport { setSelectedUser } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst ListItem = ({ id, name, number, url, deleteContact, toggleModal }) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const dispatch = useDispatch();\n\n  const listItemClickHandler = e => {\n    const clickTag = e.target.tagName;\n    if (clickTag === 'LI' || clickTag === 'P') {\n      toggleModal();\n      dispatch(setSelectedUser({ id, name, number, url, action: 'Edit' }));\n    }\n  };\n\n  return (\n    <li className={css.listItem} onClick={listItemClickHandler}>\n      <div\n        className={css.imageThumb}\n        onClick={() => {\n          setIsFavorite(!isFavorite);\n        }}\n      >\n        {url && (\n          <img className={css.photoDemo} src={url} alt=\"User portrait\"></img>\n        )}\n        {isFavorite ? (\n          <MdFavorite className={css.favoriteIcon} />\n        ) : (\n          <MdFavoriteBorder className={css.favoriteBorderIcon} />\n        )}\n      </div>\n\n      <div className={css.dataBox}>\n        <p className={css.pName}>{name}</p>\n        <p className={css.pNumber}>{number}</p>\n      </div>\n\n      <button className={css.button} type=\"button\">\n        <FaPhone className={css.callIcon} />\n      </button>\n\n      <button\n        onClick={() => deleteContact(id)}\n        className={css.button}\n        type=\"button\"\n      >\n        <CiSquareRemove className={css.removeIcon} />\n      </button>\n    </li>\n  );\n};\n\nexport default ListItem;\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  deleteContact: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {\n  getContactsDBThunk,\n  deleteContactDBThunk,\n} from 'redux/contactsDB/thunks';\nimport css from './ContactList.module.css';\nimport ListItem from 'components/ListItem/ListItem';\nimport { contactsSelector, filterSelector } from 'redux/stateSelectors';\n\nconst ContactList = ({ toggleModal }) => {\n  const dispatch = useDispatch();\n  const { contacts, error, isLoading } = useSelector(contactsSelector);\n  const { filter } = useSelector(filterSelector);\n\n  useEffect(() => {\n    dispatch(getContactsDBThunk());\n  }, [dispatch]);\n\n  const filterByName = () => {\n    const lowName = filter?.toLowerCase();\n    return contacts\n      .filter(item => item.name?.toLowerCase().includes(lowName))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  const deleteHandler = id => {\n    dispatch(deleteContactDBThunk(id));\n  };\n\n  return (\n    <div className={css.contactList}>\n      <ul className={css.contactListUl}>\n        {filterByName().map(({ id, name, number, url }) => (\n          <ListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            url={url}\n            deleteContact={deleteHandler}\n            toggleModal={toggleModal}\n          />\n        ))}\n      </ul>\n      {error && <h4>{error}</h4>}\n      {isLoading && (\n        <p>\n          {\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"96\"\n              visible={true}\n            />\n          }\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"Filter_panel__zlfTk\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"searchPic\":\"Filter_searchPic__P7Cl2\",\"modalOpen\":\"Filter_modalOpen__8iLEA\"};","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\nimport { TiUserAdd } from 'react-icons/ti';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { filterSelector } from 'redux/stateSelectors';\n\nconst Filter = ({ onModalOpen }) => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(filterSelector);\n\n  const inputHandler = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.panel}>\n      <label className={css.label}>\n        <input\n          onChange={inputHandler}\n          className={css.input}\n          value={filter}\n          type=\"text\"\n          placeholder=\"Search by Name\"\n        ></input>\n        <span className={css.searchPic}>\n          <FcSearch />\n        </span>\n      </label>\n      <span\n        onClick={() => onModalOpen()}\n        className={css.modalOpen}\n        type=\"button\"\n      >\n        <TiUserAdd></TiUserAdd>\n      </span>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onModalOpen: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalEl = document.getElementById('modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handlerKeydown = ev => {\n      if (ev.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handlerKeydown);\n    return () => {\n      window.removeEventListener('keydown', handlerKeydown);\n    };\n  }, [onClose]);\n\n  const handlerBackdropClick = ev => {\n    if (ev.target === ev.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div onClick={handlerBackdropClick} className={css.Overlay}>\n      <div className={css.Modal}>{children}</div>\n    </div>,\n    modalEl\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__gVK0J\",\"title\":\"Contacts_title__LxdN4\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedUser } from 'redux/filter/filterSlice';\n\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport Modal from '../../components/Modal/Modal';\nimport css from './Contacts.module.css';\n\nexport const Contacts = () => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n    dispatch(setSelectedUser({ name: '', number: '', url: '', action: 'Add' }));\n  };\n\n  return (\n    <div className={css.contacts}>\n      <Filter onModalOpen={toggleModal} />\n\n      <ContactList toggleModal={toggleModal} />\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Form toggleModal={toggleModal}></Form>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["toggleModal","contacts","useSelector","contactsSelector","filterSelector","selectedUser","id","nameIni","name","numberIni","number","urlIni","url","actionModal","action","dispatch","useDispatch","useState","setName","setNumber","setUrl","onSubmit","e","newItem","preventDefault","decisionForAdd","array","lowName","toLowerCase","find","isIncludingName","alert","postContactDBThunk","addUser","putContactDBThunk","className","css","autoComplete","src","alt","type","pattern","title","required","value","onChange","currentTarget","placeholder","accept","file","target","files","reader","FileReader","readAsDataURL","onload","result","deleteContact","isFavorite","setIsFavorite","onClick","clickTag","tagName","setSelectedUser","error","isLoading","filter","useEffect","getContactsDBThunk","deleteHandler","deleteContactDBThunk","item","includes","sort","a","b","localeCompare","filterByName","map","strokeColor","strokeWidth","animationDuration","width","visible","onModalOpen","setFilter","modalEl","document","getElementById","children","onClose","handlerKeydown","ev","code","window","addEventListener","removeEventListener","createPortal","Contacts","showModal","setShowModal","prev"],"sourceRoot":""}