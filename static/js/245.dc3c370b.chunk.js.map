{"version":3,"file":"static/js/245.dc3c370b.chunk.js","mappings":"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","sources":["webpack://goit-react-phonebook_final/./src/components/Form/Form.module.css?89ba","webpack://goit-react-phonebook_final/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","components/Form/Form.jsx","webpack://goit-react-phonebook_final/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-phonebook_final/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-phonebook_final/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-phonebook_final/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"iconSpan\":\"Form_iconSpan__49o47\",\"formLabel\":\"Form_formLabel__alHO0\",\"input\":\"Form_input__FTtTw\",\"imageLabel\":\"Form_imageLabel__58gHn\",\"icon\":\"Form_icon__zEIiB\",\"imageInput\":\"Form_imageInput__sG6S2\",\"imageWarningSpan\":\"Form_imageWarningSpan__LbjjH\",\"button\":\"Form_button__8NOIT\",\"photo\":\"Form_photo__4Kxdb\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ListItem_listItem__POSh4\",\"imageThumb\":\"ListItem_imageThumb__Eec-4\",\"favoriteBorderIcon\":\"ListItem_favoriteBorderIcon__ME4Dm\",\"favoriteIcon\":\"ListItem_favoriteIcon__Qnsa3\",\"dataBox\":\"ListItem_dataBox__SmNq0\",\"pName\":\"ListItem_pName__pIS+q\",\"pNumber\":\"ListItem_pNumber__5gwYl\",\"button\":\"ListItem_button__6KOfW\",\"starIcon\":\"ListItem_starIcon__Lfote\",\"callIcon\":\"ListItem_callIcon__0sjQf\",\"removeIcon\":\"ListItem_removeIcon__9qhcz\",\"photoDemo\":\"ListItem_photoDemo__+09+G\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ListItem.module.css';\nimport { CiSquareRemove } from 'react-icons/ci';\nimport { FaPhone } from 'react-icons/fa';\nimport { MdFavorite, MdFavoriteBorder } from 'react-icons/md';\nimport { setSelectedUser } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteContactThunk,\n  patchContactThunk,\n} from 'redux/contactsService/thunks';\n\nexport const FAVORITE = {\n  IsFavorite: 'IsFavorite',\n  NotFavorite: 'NotFavorite',\n};\n\nconst ListItem = ({\n  id,\n  name,\n  number,\n  url,\n  isFavorite: isFavoriteIni,\n  toggleModal,\n}) => {\n  const [isFavorite, setIsFavorite] = useState(isFavoriteIni);\n  const dispatch = useDispatch();\n\n  const toggleFavorite = () => {\n    if (isFavorite === FAVORITE.IsFavorite) {\n      dispatch(\n        patchContactThunk({\n          id,\n          name,\n          number: `${number}|-|${url}|-|${FAVORITE.NotFavorite}`,\n        })\n      );\n      setIsFavorite(FAVORITE.NotFavorite);\n      return;\n    }\n    dispatch(\n      patchContactThunk({\n        id,\n        name,\n        number: `${number}|-|${url}|-|${FAVORITE.IsFavorite}`,\n      })\n    );\n    setIsFavorite(FAVORITE.IsFavorite);\n  };\n\n  const listItemClickHandler = e => {\n    const clickTag = e.target.tagName;\n    if (clickTag === 'LI' || clickTag === 'P') {\n      toggleModal();\n      dispatch(\n        setSelectedUser({ id, name, number, url, isFavorite, action: 'Edit' })\n      );\n    }\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <li className={css.listItem} onClick={listItemClickHandler}>\n      <div className={css.imageThumb} onClick={toggleFavorite}>\n        {url && (\n          <img className={css.photoDemo} src={url} alt=\"User portrait\"></img>\n        )}\n        {isFavorite === FAVORITE.IsFavorite ? (\n          <MdFavorite className={css.favoriteIcon} />\n        ) : (\n          <MdFavoriteBorder className={css.favoriteBorderIcon} />\n        )}\n      </div>\n\n      <div className={css.dataBox}>\n        <p className={css.pName}>{name}</p>\n        <p className={css.pNumber}>{number}</p>\n      </div>\n\n      <button className={css.button} type=\"button\">\n        <FaPhone className={css.callIcon} />\n      </button>\n\n      <button onClick={deleteHandler} className={css.button} type=\"button\">\n        <CiSquareRemove className={css.removeIcon} />\n      </button>\n    </li>\n  );\n};\n\nexport default ListItem;\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  isFavorite: PropTypes.string,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import css from './Form.module.css';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport { MdOutlineAddAPhoto } from 'react-icons/md';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  postContactThunk,\n  patchContactThunk,\n} from 'redux/contactsService/thunks';\nimport { contactsSelector, filterSelector } from 'redux/stateSelectors';\nimport { FAVORITE } from 'components/ListItem/ListItem';\n\nconst Form = ({ toggleModal }) => {\n  const { contacts } = useSelector(contactsSelector);\n  const {\n    selectedUser: {\n      id,\n      name: nameIni,\n      number: numberIni,\n      url: urlIni,\n      isFavorite,\n      action: actionModal,\n    },\n  } = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(nameIni);\n  const [number, setNumber] = useState(numberIni);\n  const [url, setUrl] = useState(urlIni);\n\n  const isIncludingName = (name, array) => {\n    const lowName = name.toLowerCase();\n    return array.find(({ name }) => name.toLowerCase() === lowName);\n  };\n\n  const addUser = newItem => {\n    const decisionForAdd = isIncludingName(newItem.name, contacts);\n    if (decisionForAdd) {\n      alert(`${decisionForAdd.name} is already in contacts !`);\n      return;\n    }\n    dispatch(postContactThunk(newItem));\n  };\n\n  const editUser = newItem => {\n    dispatch(patchContactThunk(newItem));\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    actionModal === 'Add' &&\n      addUser({ name, number: `${number}|-|${url}|-|${FAVORITE.NotFavorite}` });\n    actionModal === 'Edit' &&\n      editUser({ id, name, number: `${number}|-|${url}|-|${isFavorite}` });\n\n    toggleModal();\n  };\n\n  const handlerChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handlerChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handlerChangeFile = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setUrl(reader.result);\n    };\n  };\n\n  return (\n    <form onSubmit={handlerSubmit} className={css.form} autoComplete=\"off\">\n      <span className={css.iconSpan}>\n        {url ? (\n          <img className={css.photo} src={url} alt=\"User portrait\"></img>\n        ) : (\n          <FiUser />\n        )}\n      </span>\n      <label className={css.formLabel}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handlerChangeName}\n          className={css.input}\n          placeholder=\"Name\"\n        />\n      </label>\n      <label className={css.formLabel}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handlerChangeNumber}\n          className={css.input}\n          placeholder=\"Number\"\n        />\n      </label>\n      <label className={css.imageLabel}>\n        <MdOutlineAddAPhoto className={css.icon} />\n        <input\n          type=\"file\"\n          name=\"image\"\n          accept=\"image/*,.png,.jpg,.gif,.web\"\n          className={css.imageInput}\n          onChange={handlerChangeFile}\n        />\n        <span className={css.imageWarningSpan}>max 70KB</span>\n      </label>\n\n      <button className={css.button} type=\"submit\">\n        {actionModal}\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListUl\":\"ContactList_contactListUl__H+yFe\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\n\nimport css from './ContactList.module.css';\nimport ListItem from 'components/ListItem/ListItem';\nimport { contactsSelector, filterSelector } from 'redux/stateSelectors';\nimport { getContactsThunk } from 'redux/contactsService/thunks';\n\nconst ContactList = ({ toggleModal }) => {\n  const dispatch = useDispatch();\n  const { contacts, isLoading } = useSelector(contactsSelector);\n  const { filter } = useSelector(filterSelector);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterByName = () => {\n    const lowName = filter?.toLowerCase();\n    return contacts\n      ?.filter(item => item.name?.toLowerCase().includes(lowName))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  return (\n    <div className={css.contactList}>\n      <ul className={css.contactListUl}>\n        {filterByName()?.map(({ id, name, number }) => {\n          const [number_, url_, isFavorite_] = number.split('|-|');\n          return (\n            <ListItem\n              key={id}\n              id={id}\n              name={name}\n              number={number_}\n              url={url_}\n              isFavorite={isFavorite_}\n              toggleModal={toggleModal}\n            />\n          );\n        })}\n      </ul>\n\n      {isLoading && (\n        <p>\n          {\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"96\"\n              visible={true}\n            />\n          }\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"Filter_panel__zlfTk\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"searchPic\":\"Filter_searchPic__P7Cl2\",\"modalOpen\":\"Filter_modalOpen__8iLEA\"};","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\nimport { TiUserAdd } from 'react-icons/ti';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { filterSelector } from 'redux/stateSelectors';\n\nconst Filter = ({ onModalOpen }) => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(filterSelector);\n\n  const inputHandler = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.panel}>\n      <label className={css.label}>\n        <input\n          onChange={inputHandler}\n          className={css.input}\n          value={filter}\n          type=\"text\"\n          placeholder=\"Search by Name\"\n        ></input>\n        <span className={css.searchPic}>\n          <FcSearch />\n        </span>\n      </label>\n      <span\n        onClick={() => onModalOpen()}\n        className={css.modalOpen}\n        type=\"button\"\n        title=\"Create contact\"\n      >\n        <TiUserAdd></TiUserAdd>\n      </span>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onModalOpen: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalEl = document.getElementById('modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handlerKeydown = ev => {\n      if (ev.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handlerKeydown);\n    return () => {\n      window.removeEventListener('keydown', handlerKeydown);\n    };\n  }, [onClose]);\n\n  const handlerBackdropClick = ev => {\n    if (ev.target === ev.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div onClick={handlerBackdropClick} className={css.Overlay}>\n      <div className={css.Modal}>{children}</div>\n    </div>,\n    modalEl\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__gVK0J\",\"title\":\"Contacts_title__LxdN4\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedUser } from 'redux/filter/filterSlice';\n\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport Modal from '../../components/Modal/Modal';\nimport css from './Contacts.module.css';\n\nexport const Contacts = () => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n    dispatch(setSelectedUser({ name: '', number: '', url: '', action: 'Add' }));\n  };\n\n  return (\n    <div className={css.contacts}>\n      <Filter onModalOpen={toggleModal} />\n\n      <ContactList toggleModal={toggleModal} />\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Form toggleModal={toggleModal}></Form>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FAVORITE","id","name","number","url","isFavoriteIni","isFavorite","toggleModal","useState","setIsFavorite","dispatch","useDispatch","className","css","onClick","e","clickTag","target","tagName","setSelectedUser","action","patchContactThunk","src","alt","type","deleteContactThunk","contacts","useSelector","contactsSelector","filterSelector","selectedUser","nameIni","numberIni","urlIni","actionModal","setName","setNumber","setUrl","onSubmit","newItem","preventDefault","decisionForAdd","array","lowName","toLowerCase","find","isIncludingName","alert","postContactThunk","addUser","autoComplete","pattern","title","required","value","onChange","currentTarget","placeholder","accept","file","files","reader","FileReader","readAsDataURL","onload","result","isLoading","filter","useEffect","getContactsThunk","item","includes","sort","a","b","localeCompare","filterByName","map","split","number_","url_","isFavorite_","strokeColor","strokeWidth","animationDuration","width","visible","onModalOpen","setFilter","modalEl","document","getElementById","children","onClose","handlerKeydown","ev","code","window","addEventListener","removeEventListener","createPortal","Contacts","showModal","setShowModal","prev"],"sourceRoot":""}